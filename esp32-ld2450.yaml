esphome:
  name: "esp32-ld2450"
  friendly_name: ESP32 LD2450 sensor
  includes:
   - components/ld2450_uart.h
  on_boot:
    priority: 600
    # ...
    then:
      - lambda: |-
          auto uart_component = static_cast<LD2450 *>(ld2450);
          uart_component->setNumbers(bolckZone1X, bolckZone1Y, bolckZone2X, bolckZone2Y);

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: "6xrsn+nCnz7SdCJ+hLbMcQyhYj6l8ic3zgukC7mu7Ko="

ota:
  password: "b15d32ada5afe73ff2aa2c9348e8b3e9"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-13123 Fallback Hotspot"
    password: "20XIKKNqGlOu"

captive_portal:

uart:
  id: uart_ld2450
  tx_pin: TX
  rx_pin: RX
  baud_rate: 256000
  parity: NONE
  stop_bits: 1
#  debug:
#    direction: BOTH
#    dummy_receiver: false

custom_component:
  - lambda: |-
      return {new LD2450(id(uart_ld2450))};
    components:
      - id: ld2450

number:
  - platform: template
    name: "Block Zone X1"
    id: bolckZone1X
    min_value: -7500
    max_value: 7500
    step: 1
    update_interval: never
    optimistic: true
    unit_of_measurement: "mm"
    initial_value: 0
    set_action:
      - lambda: |-
          auto uart_component = static_cast<LD2450 *>(ld2450);
          uart_component->setBlockZone(x,id(bolckZone1Y).state,id(bolckZone2X).state,id(bolckZone2Y).state);
  - platform: template
    name: "Block Zone Y1"
    id: bolckZone1Y
    min_value: -7500
    max_value: 7500
    step: 1
    update_interval: never
    optimistic: true
    unit_of_measurement: "mm"
    initial_value: 0
    set_action:
      - lambda: |-
          auto uart_component = static_cast<LD2450 *>(ld2450);
          uart_component->setBlockZone(id(bolckZone1X).state,x,id(bolckZone2X).state,id(bolckZone2Y).state);
  - platform: template
    name: "Block Zone X2"
    id: bolckZone2X
    min_value: -7500
    max_value: 7500
    step: 1
    update_interval: never
    optimistic: true
    unit_of_measurement: "mm"
    initial_value: 0
    set_action:
      - lambda: |-
          auto uart_component = static_cast<LD2450 *>(ld2450);
          uart_component->setBlockZone(id(bolckZone1X).state,id(bolckZone1Y).state,x,id(bolckZone2Y).state);
  - platform: template
    name: "Block Zone Y2"
    id: bolckZone2Y
    min_value: -7500
    max_value: 7500
    step: 1
    update_interval: never
    optimistic: true
    unit_of_measurement: "mm"
    initial_value: 0
    set_action:
      - lambda: |-
          auto uart_component = static_cast<LD2450 *>(ld2450);
          uart_component->setBlockZone(id(bolckZone1X).state,id(bolckZone1Y).state,id(bolckZone2X).state,x);

sensor:
  - platform: custom
    lambda: |-
      auto uart_component = static_cast<LD2450 *>(ld2450);
      return {uart_component->target1Resolution, uart_component->target1Speed, uart_component->target1X, uart_component->target1Y,
              uart_component->target2Resolution, uart_component->target2Speed, uart_component->target2X, uart_component->target2Y,
              uart_component->target3Resolution, uart_component->target3Speed, uart_component->target3X, uart_component->target3Y,
              uart_component->humanCount, 
      };
    sensors:
      - name: "Target1 Resolution"
        unit_of_measurement: "mm"
        accuracy_decimals: 0
        icon: mdi:artboard
      - name: "Target1 Speed"
        unit_of_measurement: "cm/s"
        accuracy_decimals: 0
        icon: mdi:speedometer
      - name: "Target1 X"
        unit_of_measurement: "cm"
        accuracy_decimals: 0
        icon: mdi:map-marker-right
      - name: "Target1 Y"
        unit_of_measurement: "cm"
        accuracy_decimals: 0
        icon: mdi:map-marker-down
      - name: "Target2 Resolution"
        unit_of_measurement: "mm"
        accuracy_decimals: 0
        icon: mdi:artboard
      - name: "Target2 Speed"
        unit_of_measurement: "cm/s"
        accuracy_decimals: 0
        icon: mdi:speedometer
      - name: "Target2 X"
        unit_of_measurement: "cm"
        accuracy_decimals: 0
        icon: mdi:map-marker-right
      - name: "Target2 Y"
        unit_of_measurement: "cm"
        accuracy_decimals: 0
        icon: mdi:map-marker-down
      - name: "Target3 Resolution"
        unit_of_measurement: "mm"
        accuracy_decimals: 0
        icon: mdi:artboard
      - name: "Target3 Speed"
        unit_of_measurement: "cm/s"
        accuracy_decimals: 0
        icon: mdi:speedometer
      - name: "Target3 X"
        unit_of_measurement: "cm"
        accuracy_decimals: 0
        icon: mdi:map-marker-right
      - name: "Target3 Y"
        unit_of_measurement: "cm"
        accuracy_decimals: 0
        icon: mdi:map-marker-down
      - name: "Number of people"
        accuracy_decimals: 0
        icon: mdi:human-male-female-child

button:
  - platform: template
    name: "Get config"
    on_press:
      - lambda: 'static_cast<LD2450 *>(ld2450)->queryParameters();'
  - platform: template
    name: "Reboot LD2450"
    on_press:
      lambda: 'static_cast<LD2450 *>(ld2450)->reboot();'
  - platform: template
    name: "Reset LD2450"
    on_press:
      lambda: 'static_cast<LD2450 *>(ld2450)->factoryReset();'
